# Assignments:
* 1. Implement -,*,/,conj(ugate) for Complex numbers
* 2. Define a class with 4 member methods with 4 different access specifiers.
     Create test cases to observe the influence of access specifiers on the
     visibility of class members.
* 3. Model the class hierarchy for: vehicle, motorbike, car, truck, racing car etc.
     bike, train.
* 4. Use overriding to model starting and stopping the class hierarchy from point 3.
* 5. Design an interface describing a microwave oven, create a class implementing the
     interface, create an object of this class and perform some manipulations over
     the object using the elements of the interface.
* 6. Design and implement a polymorphic procedure of your choice.
     Design and implement an ad-hoc polymorphic procedure.
* 7. Design and implement a generic class Triple (similar to Pair).
* 8. Given a List<Double>, write 2 procedures that return:
     - A sum of the elements in the list
     - A product of the elements in the list
     - A list that contains reciprocals of every number in the list
       (https://en.wikipedia.org/wiki/Multiplicative_inverse)

